name: "Terraform Deploy"

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: "Terraform Deploy"
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.5.7"

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        env:
          TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
          TF_VAR_ssh_key_name: ${{ secrets.DO_SSH_KEY_NAME }}

      - name: Terraform Validate
        id: validate
        run: terraform validate
        env:
          TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
          TF_VAR_ssh_key_name: ${{ secrets.DO_SSH_KEY_NAME }}

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        env:
          TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
          TF_VAR_ssh_key_name: ${{ secrets.DO_SSH_KEY_NAME }}
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
        env:
          TF_VAR_do_token: ${{ secrets.DO_TOKEN }}
          TF_VAR_ssh_key_name: ${{ secrets.DO_SSH_KEY_NAME }}
